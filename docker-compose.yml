version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: spring-boot-app
    container_name: spring-boot-app
    ports:
      - "8080:8080"
    depends_on:
      - db
#      - redis
#      - elasticsearch
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/employee
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - REDIS_HOST=redis
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

  db:
    image: mysql
    container_name: mysql-db
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=employee
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
    volumes:
      - db_data:/var/lib/mysql

#  redis:
#    image: redis:latest
#    container_name: redis
#    ports:
#      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:     
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data

#volume created in local system  E:\JavaIDE\DockerVolume\VolumeProject-1


volumes:
  db_data:
  es_data:

